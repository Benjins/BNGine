#define _GL_EXT_INIT_CPP 1
#include "GLExtInit.h"
#undef _GL_EXT_INIT_CPP

#include "../../ext/CppUtils/assert.h"

#if defined(BNS_OS_MESA)
#include <GL/osmesa.h>
#endif

void InitGlExts() {
#if defined(BNS_OS_MESA)
#define EXTENSION_PROC(type,name) name = (type)OSMesaGetProcAddress(#name); ASSERT(name != nullptr);
#elif defined(_WIN32)
#define EXTENSION_PROC(type,name) name = (type)wglGetProcAddress(#name); ASSERT(name != nullptr);
#elif defined(__APPLE__)
#define EXTENSION_PROC(type,name) ASSERT(name != nullptr);
#else
#define EXTENSION_PROC(type,name) name = (type)glXGetProcAddress((const unsigned char*)#name); ASSERT(name != nullptr);
#endif
	EXTENSION_PROC(PFNGLCREATESHADERPROC, glCreateShader);
	EXTENSION_PROC(PFNGLSHADERSOURCEPROC, glShaderSource);
	EXTENSION_PROC(PFNGLCOMPILESHADERPROC, glCompileShader);
	EXTENSION_PROC(PFNGLGETSHADERIVPROC, glGetShaderiv);
	EXTENSION_PROC(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog);
	EXTENSION_PROC(PFNGLATTACHSHADERPROC, glAttachShader);
	EXTENSION_PROC(PFNGLGETPROGRAMIVPROC, glGetProgramiv);
	EXTENSION_PROC(PFNGLLINKPROGRAMPROC, glLinkProgram);
	EXTENSION_PROC(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog);
	EXTENSION_PROC(PFNGLVALIDATEPROGRAMPROC, glValidateProgram);
	EXTENSION_PROC(PFNGLCREATEPROGRAMPROC, glCreateProgram);
	EXTENSION_PROC(PFNGLUSEPROGRAMPROC, glUseProgram);
	EXTENSION_PROC(PFNGLGENBUFFERSPROC, glGenBuffers);
	EXTENSION_PROC(PFNGLBINDBUFFERPROC, glBindBuffer);
	EXTENSION_PROC(PFNGLBUFFERDATAPROC, glBufferData);
	EXTENSION_PROC(PFNGLGETATTRIBLOCATIONPROC, glGetAttribLocation);
	EXTENSION_PROC(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray);
	EXTENSION_PROC(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray);
	EXTENSION_PROC(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer);
	EXTENSION_PROC(PFNGLUNIFORM1FPROC, glUniform1f);
	EXTENSION_PROC(PFNGLUNIFORM1IPROC, glUniform1i);
	EXTENSION_PROC(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation);
	EXTENSION_PROC(PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv);
	EXTENSION_PROC(PFNGLDELETEBUFFERSPROC, glDeleteBuffers);
#if defined(_WIN32)
	EXTENSION_PROC(PFNGLACTIVETEXTUREPROC, glActiveTexture);
#endif
#undef EXTENSION_PROC
}


